{"version":3,"sources":["componets/ContactForm/ContactForm.module.css","componets/Header/Header.module.css","componets/Filter/Filter.module.css","componets/ContactListItem/ContactListItem.module.css","componets/Body/Body.module.css","componets/ContactList/ContactList.module.css","componets/ContactList/transitions/ContactLsTransition.module.css","redux/Contact/contactActions.js","redux/Contact/contactsReducer.js","redux/Contact/themeContactsReducer.js","redux/store.js","redux/Contact/contactsOperations.js","redux/Contact/contactsSelectors.js","contex/ThemeContext.js","componets/Header/Header.js","componets/Body/Body.js","helpers/constants.js","componets/ContactForm/ContactForm.js","componets/Filter/Filter.js","componets/ContactListItem/ContactListItem.js","componets/ContactList/ContactList.js","componets/App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","onChangeFilter","onChangeTheme","onError","state","payload","items","createReducer","filter","contact","id","error","combineReducers","theme","store","configureStore","reducer","contacts","contactsReducer","themePhonebook","themeContactsReducer","axios","defaults","baseURL","getContacts","getFilter","getError","getTheme","getVisibleTasks","createSelector","name","toLowerCase","includes","getContactById","_","find","themeConfig","light","headerBg","fontColor","bodybg","dark","mDTP","toggleTheme","connect","style","background","styleConxt","color","className","styles","theme_selector","label","switch","type","onChange","currentTarget","checked","slider","contactsSelectors","children","s","body","INITIAL_STATE_FORM","number","ContactForm","handleInputChange","target","value","setState","handleSubmit","e","props","onAddContacts","preventDefault","some","reset","alert","this","phoneBook_form","phoneBook_item","onSubmit","phoneBook_lb","phoneBook_inp","buttonPhonBk","Component","dispatch","post","then","response","console","log","data","catch","phone_filter","phone_filterInp","TaskListItem","onRemove","list_PhoneLs","buttonPhoneLs","onClick","item","delete","onRemoveContacts","defaultProps","Contact_list","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","transition","ContactListItem","App","fetchContacts","showContacts","length","message","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c03975b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBook_form\":\"ContactForm_phoneBook_form__3ijlW\",\"phoneBook_item\":\"ContactForm_phoneBook_item__3jNWu\",\"buttonPhonBk\":\"ContactForm_buttonPhonBk__3tjHr\",\"phoneBook_inp\":\"ContactForm_phoneBook_inp__2DHaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme_selector\":\"Header_theme_selector__3GpMG\",\"label\":\"Header_label__FMtyz\",\"switch\":\"Header_switch__31tlB\",\"slider\":\"Header_slider__2welv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone_filter\":\"Filter_phone_filter__OkDT4\",\"phone_filterInp\":\"Filter_phone_filterInp__3DTPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_PhoneLs\":\"ContactListItem_list_PhoneLs__2rnxs\",\"buttonPhoneLs\":\"ContactListItem_buttonPhoneLs__36Xmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__1sQtb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_list\":\"ContactList_Contact_list__2se2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactLsTransition_enter__TsF1H\",\"enterActive\":\"ContactLsTransition_enterActive__3EaDP\",\"exit\":\"ContactLsTransition_exit__3gU24\",\"exitActive\":\"ContactLsTransition_exitActive__3RKgg\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst fetchContactsRequest = createAction('contact/contactFetchRequest');\r\nconst fetchContactsSuccess = createAction('contact/contactFetchSuccess');\r\nconst fetchContactsError = createAction('contact/contactFetchSucces');\r\n\r\nconst addContactRequest = createAction('contact/contactAddRequest');\r\nconst addContactSuccess = createAction('contact/contactAddSuccess');\r\nconst addContactError = createAction('contact/contactAddSucces');\r\n\r\nconst removeContactRequest = createAction('contact/contactRemoveAddRequest');\r\nconst removeContactSuccess = createAction('contact/contactRemoveAddSuccess');\r\nconst removeContactError = createAction('contact/contactRemoveAddSucces');\r\n\r\nconst onChangeFilter = createAction('contact/changeFilter');\r\n\r\nconst onChangeTheme = createAction('contact/changeTheme');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  onChangeFilter,\r\n  onChangeTheme,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactSuccess,\r\n  removeContactSuccess,\r\n  fetchContactsSuccess,\r\n  onChangeFilter,\r\n  fetchContactsError,\r\n  addContactError,\r\n  removeContactError,\r\n} from './contactActions';\r\n\r\nconst addContacts = (state, { payload }) => [...state, payload];\r\n\r\nconst removeContacts = (state, { payload }) =>\r\n  state.filter(contact => contact.id !== payload);\r\n\r\nconst onFilter = (state, { payload }) => payload;\r\n\r\nconst onError = (state, { payload }) => (payload ? payload : null);\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: addContacts,\r\n  [removeContactSuccess]: removeContacts,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [onChangeFilter]: onFilter,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: onError,\r\n  [addContactError]: onError,\r\n  [removeContactError]: onError,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { onChangeTheme } from './contactActions';\r\n\r\nconst changeTheme = (state, { payload }) => (payload ? 'dark' : 'light');\r\n\r\nconst theme = createReducer('light', {\r\n  [onChangeTheme]: changeTheme,\r\n});\r\n\r\nexport default combineReducers({\r\n  theme,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './Contact/contactsReducer';\r\nimport themeContactsReducer from './Contact/themeContactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer, themePhonebook: themeContactsReducer },\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from './contactActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst onFetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      console.log(data);\r\n      dispatch(fetchContactsSuccess(data));\r\n    })\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst onAddContacts = ({ name, number }) => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(response => {\r\n      console.log(response.data);\r\n      dispatch(addContactSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst onRemoveContacts = id => dispatch => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(removeContactSuccess(id));\r\n    })\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { onFetchContacts, onAddContacts, onRemoveContacts };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getError = state => state.contacts.error;\r\nconst getTheme = state => state.themePhonebook.theme;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleTasks = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, id) => id, getContacts],\r\n  (id, contacts) => contacts.find(contact => contact.id === id),\r\n);\r\n\r\nexport default {\r\n  getContacts,\r\n  getError,\r\n  getTheme,\r\n  getFilter,\r\n  getVisibleTasks,\r\n  getContactById,\r\n};\r\n","export const themeConfig = {\r\n  light: {\r\n    headerBg: '#d2e0e3',\r\n    fontColor: '#2a5c69',\r\n    bodybg: '#9ab7ba',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onChangeTheme } from '../../redux/Contact/contactActions';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ theme, toggleTheme }) => (\r\n  <header\r\n    style={{\r\n      background: styleConxt[theme].headerBg,\r\n      color: styleConxt[theme].fontColor,\r\n    }}\r\n  >\r\n    <div className={styles.theme_selector}>\r\n      <span className={styles.label}>\r\n        Toggle theme: {''}\r\n        {theme}\r\n      </span>\r\n      <label className={styles.switch}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={({ currentTarget }) => toggleTheme(currentTarget.checked)}\r\n        />\r\n        <span className={styles.slider}></span>\r\n      </label>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nconst mDTP = { toggleTheme: onChangeTheme };\r\nconst mSTP = ({ themePhonebook }) => ({ theme: themePhonebook.theme });\r\n\r\nexport default connect(mSTP, mDTP)(Header);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\nimport s from './Body.module.css';\r\nconst Body = ({ theme, children }) => (\r\n  <div\r\n    className={s.body}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({ theme: contactsSelectors.getTheme(state) });\r\n\r\nexport default connect(mSTP, null)(Body);\r\n","const INITIAL_STATE_FORM = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport { INITIAL_STATE_FORM };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { INITIAL_STATE_FORM } from '../../helpers/constants';\r\n\r\nimport { onAddContacts } from '../../redux/Contact/contactsOperations';\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_FORM,\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { contacts, onAddContacts } = this.props;\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n\r\n    const overlap = contacts.some(contacts => contacts.name === name);\r\n    if (!overlap) {\r\n      this.reset();\r\n      return onAddContacts({ ...this.state });\r\n    } else alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE_FORM });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={s.phoneBook_form}>\r\n        <h2 className={s.phoneBook_item}>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.phoneBook_lb}>\r\n            Name\r\n            <input\r\n              className={s.phoneBook_inp}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className={s.phoneBook_lb}>\r\n            Number\r\n            <input\r\n              className={s.phoneBook_inp}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.buttonPhonBk}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mDTP = { onAddContacts };\r\nconst mSTP = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { onChangeFilter } from '../../redux/Contact/contactActions';\r\n\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <div className={s.phone_filter}>\r\n    <h3>Find my contacts</h3>\r\n    <input\r\n      type=\"text\"\r\n      className={s.phone_filterInp}\r\n      value={filter}\r\n      onChange={e => onChange(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => ({\r\n  value: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mDTP = {\r\n  onChange: onChangeFilter,\r\n};\r\n\r\nexport default connect(mSTP, mDTP)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onRemoveContacts } from '../../redux/Contact/contactsOperations';\r\n\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst TaskListItem = ({ theme, name, number, onRemove }) => (\r\n  <li\r\n    className={s.list_PhoneLs}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    <p>\r\n      {name}:{number}\r\n    </p>\r\n\r\n    <button type=\"button\" className={s.buttonPhoneLs} onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst mSTP = (state, { id }) => {\r\n  const item = contactsSelectors.getContactById(state, id);\r\n  const theme = contactsSelectors.getTheme(state);\r\n\r\n  return { theme, ...item };\r\n};\r\n\r\nconst mDTP = (dispatch, { id }) => ({\r\n  onRemove: () => dispatch(onRemoveContacts(id)),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(TaskListItem);\r\n\r\nTaskListItem.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  theme: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport contactsSelectors from '../../redux/Contact/contactsSelectors';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nimport styleConxt from '../../contex/ThemeContext';\r\n\r\nimport s from './ContactList.module.css';\r\nimport transition from '../ContactList/transitions/ContactLsTransition.module.css';\r\n\r\nconst ContactList = ({ contacts, theme }) => (\r\n  <div\r\n    className={s.Contact_list}\r\n    style={{\r\n      color: styleConxt[theme].fontColor,\r\n      background: styleConxt[theme].bodybg,\r\n    }}\r\n  >\r\n    <h2>Contacts</h2>\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={200} classNames={transition}>\r\n          <ContactListItem key={id} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </div>\r\n);\r\n\r\nconst mSTP = state => {\r\n  return {\r\n    contacts: contactsSelectors.getVisibleTasks(state),\r\n    theme: contactsSelectors.getTheme(state),\r\n  };\r\n};\r\n\r\nexport default connect(mSTP, null)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onFetchContacts } from '../redux/Contact/contactsOperations';\r\nimport contactsSelectors from '../redux/Contact/contactsSelectors';\r\n\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport ContactListForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const showContacts = this.props.contacts.length;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        <Header />\r\n        {error && <h1>Sorry:{error.message}</h1>}\r\n        <Body>\r\n          <ContactListForm />\r\n          {showContacts > 1 && <Filter />}\r\n          <ContactList />\r\n        </Body>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mDTP = { fetchContacts: onFetchContacts };\r\nconst mSTP = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  error: contactsSelectors.getError(state),\r\n});\r\n\r\nexport default connect(mSTP, mDTP)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport App from './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}